#version 330 core

out vec4 color;
in vec3 Normal;
in vec3 FragPos;
uniform vec3 lightPos;
uniform vec3 viewPos;

uniform vec3 ObjectColor;
uniform vec3 LightColor;
uniform float AmbientStrength;
void main()
{
	vec3 Ambient=LightColor*AmbientStrength;

	vec3 norml=normalize(Normal);
	vec3 lightDir=normalize(lightPos-FragPos);
	float diff=max(dot(norml,lightDir),0.0);
	vec3 diffuse=diff*LightColor;

	vec3 viewDir=normalize(viewPos-FragPos);
	vec3 reflectDir=normalize(reflect(-lightDir,norml));
	float specularStrength=0.5f;
	float spec=max(pow(dot(reflectDir,viewDir),32),0.0);
	vec3 specular=specularStrength*spec*LightColor;
	vec3 result=(Ambient+diffuse+specular)*ObjectColor;
	color=vec4(result,1.0f);
}